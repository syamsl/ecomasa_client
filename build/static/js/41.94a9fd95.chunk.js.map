{"version":3,"sources":["components/cards/ProductCardInCheckout.js","pages/Cart.js","images/laptop.png","functions/user.js"],"names":["ProductCardInCheckout","p","dispatch","useDispatch","className","style","width","height","images","length","small","url","large","laptop","title","price","brand","onChange","e","console","log","target","value","cart","window","localStorage","getItem","JSON","parse","map","product","i","_id","color","setItem","stringify","type","payload","name","filter","c","count","confirm","splice","quantity","toast","error","shipping","CheckCircleOutlined","CloseCircleOutlined","CloseOutlined","onClick","Cart","history","useSelector","state","user","scope","to","offerPrice","reduce","acc","item","userCart","token","then","res","data","ok","push","catch","err","disabled","pathname","from","authtoken","a","axios","post","process","headers","getUserCart","get","emptyUserCart","put","applyCoupon","coupon","createOrder","stripeResponse","deliverAddress","getUserOrders","getWishlist","removeWishlist","productId","addToWishlist","createCashOrderForUser","COD","couponTrueOrFalse","couponApplied","createPaypalOrderForUser","paymentId","addUserImage","image","getUserDetails","editUserDetails","mobile","address","deleteUserAddress","id","changeStatus","orderId","orderStatus"],"mappings":"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","file":"static/js/41.94a9fd95.chunk.js","sourcesContent":["import React from \"react\";\nimport ModalImage from \"react-modal-image\";\nimport laptop from \"../../images/laptop.png\";\nimport { useDispatch } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport {\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n  CloseOutlined,\n} from \"@ant-design/icons\";\n\nconst ProductCardInCheckout = ({ p }) => {\n  const colors = [\"Black\", \"Brown\", \"Silver\", \"White\", \"Blue\"];\n  let dispatch = useDispatch();\n\n  const handleColorChange = (e) => {\n    console.log(\"color changed\", e.target.value);\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      cart.map((product, i) => {\n        if (product._id === p._id) {\n          cart[i].color = e.target.value;\n        }\n      });\n      //console.log('cart update color', cart)\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  const handleQuantityChange = (e) => {\n    // console.log(\"available quantity\", p.quantity )\n\n    var count;\n\n    if( e.target.value ==0){\n      \n      let answer = window.confirm(\"Do you want to remove cart item ?\");\n      if(answer){\n        let cart = [];\n        if (typeof window !== \"undefined\") {\n          if (localStorage.getItem(\"cart\")) {\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n          }\n          cart.map((product, i) => {\n            if (product._id == p._id) {\n              cart.splice(i, 1);\n            }\n          });\n          localStorage.setItem(\"cart\", JSON.stringify(cart));\n          dispatch({\n            type: \"ADD_TO_CART\",\n            payload: cart,\n          });\n        }\n      }\n      var count = 1;\n    }else if(e.target.value<0){\n      var count = 0;\n    }else{\n      var count = e.target.value;\n    }\n\n   \n\n    // let count = e.target.value < 1 ? 1 : e.target.value;\n\n    if (count > p.quantity) {\n      toast.error(`Max available quantity: ${p.quantity}`);\n      return;\n    }\n\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      cart.map((product, i) => {\n        if (product._id == p._id) {\n          cart[i].count = count;\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  const handleRemove = () => {\n    // console.log(p._id, \"to remove\");\n\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"cart\")) {\n        cart = JSON.parse(localStorage.getItem(\"cart\"));\n      }\n      cart.map((product, i) => {\n        if (product._id == p._id) {\n          cart.splice(i, 1);\n        }\n      });\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      dispatch({\n        type: \"ADD_TO_CART\",\n        payload: cart,\n      });\n    }\n  };\n\n  return (\n    <tbody className=\"textlg\">\n      <tr>\n        <td className=\"text-center\">\n          <div style={{ width: \"100px\", height: \"auto\" }}>\n            {p.images.length ? (\n              <ModalImage small={p.images[0].url} large={p.images[0].url} />\n            ) : (\n              <ModalImage small={laptop} large={laptop} />\n            )}\n          </div>\n        </td>\n        <td className=\"text-center\" >{p.title}</td>\n        <td className=\"text-center\" >Rs.{p.price}</td>\n        <td className=\"text-center\" >{p.brand}</td>\n        <td className=\"text-center\" >\n          <select\n            onChange={handleColorChange}\n            name=\"color\"\n            className=\"form-control inpWidth text-center\"\n          >\n            {p.color ? (\n              <option value={p.color}>{p.color}</option>\n            ) : (\n              <option>Select</option>\n            )}\n            {colors\n              .filter((c) => c !== p.color)\n              .map((c) => (\n                <option key={c} value={c}>\n                  {c}\n                </option>\n              ))}\n          </select>\n        </td>\n        <td className=\"text-center\">\n          <input\n            type=\"number\"\n            className=\"form-control inpWidth text-center\"\n            value={p.count}\n            onChange={handleQuantityChange}\n          />\n        </td>\n        <td className=\"text-center \">\n          {p.shipping === \"Yes\" ? (\n            <CheckCircleOutlined className=\"text-success\" />\n          ) : (\n            <CloseCircleOutlined className=\"text-danger\" />\n          )}\n        </td>\n        <td className=\"text-center\">\n          <CloseOutlined\n            className=\"text-danger pointer \"\n            onClick={handleRemove}\n          />\n        </td>\n      </tr>\n    </tbody>\n  );\n};\n\nexport default ProductCardInCheckout;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ProductCardInCheckout from \"../components/cards/ProductCardInCheckout\";\nimport { userCart } from \"../functions/user\";\n\nconst Cart = ({ history }) => {\n  const { cart, user } = useSelector((state) => ({ ...state }));\n  const dispatch = useDispatch();\n\n  const getTotal = () => {  \n    // if offerPrice exist in cart then use offerPrice else use price\n    return cart.reduce((acc, item) => {\n      return acc + (item.offerPrice ? item.offerPrice : item.price) * item.count;\n    }, 0);\n    // if(cart.offer){\n    //   return cart.reduce((currentValue, nextValue) => {\n    //     return currentValue + nextValue.count * nextValue.offerPrice;\n    //   }, 0);\n    // }else{\n    //   return cart.reduce((currentValue, nextValue) => {\n    //     return currentValue + nextValue.count * nextValue.price;\n    //   }, 0);\n    // }\n   \n  };\n\n  const saveOrderToDb = () => {\n    // console.log(\"cart\", JSON.stringify(cart, null, 4));\n    userCart(cart, user.token)\n      .then((res) => {\n        // console.log(\"CART POST RES==>\", res);\n        if (res.data.ok) history.push(\"/checkout\");\n      })\n      .catch((err) => console.log(\"cart save err==>\", err));\n  };\n\n  const showCartItems = () => (\n    <table className=\"table table-bordered\">\n      <thead className=\"thead-light\">\n        <tr>\n          <th className=\"text-center\" scope=\"col\">\n            Image\n          </th>\n          <th className=\"text-center\" scope=\"col\">\n            Title\n          </th>\n          <th className=\"text-center\" scope=\"col\">\n            Price\n          </th>\n          <th className=\"text-center\" scope=\"col\">\n            Brand\n          </th>\n          <th className=\"text-center\" scope=\"col\">\n            Color\n          </th>\n          <th className=\"text-center\" scope=\"col\">\n            Count\n          </th>\n          <th className=\"text-center\" scope=\"col\">\n            Shipping\n          </th>\n          <th className=\"text-center\" scope=\"col\">\n            Remove\n          </th>\n        </tr>\n      </thead>\n\n      {cart.map((p) => (\n        <ProductCardInCheckout key={p._id} p={p} />\n      ))}\n    </table>\n  );\n\n  //saveCashOrderToDb\n  const saveCashOrderToDb = () => {\n    // console.log(\"cart\", JSON.stringify(cart, null, 4));\n    dispatch({\n      type: \"COD\",\n      payload: true,\n    });\n\n    userCart(cart, user.token)\n      .then((res) => {\n        // console.log(\"CART POST RES==>\", res);\n        if (res.data.ok) history.push(\"/checkout\");\n      })\n      .catch((err) => console.log(\"cart save err==>\", err));\n  };\n\n  return (\n    <div className=\"container-fluid mt-5\">\n      <div className=\"row\">\n        <h2 className=\"m-4 text-secondary shaw\">\n          Cart - {cart.length} Product\n        </h2>\n        {/* {JSON.stringify(cart)} */}\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          {!cart.length ? (\n            <p>\n              No products in cart. <Link to=\"/shop\">Continue shopping.</Link>\n            </p>\n          ) : (\n            showCartItems()\n          )}\n        </div>\n        <div className=\"col-md-4\">\n          <h2 className=\"text-center text-secondary shaw\">\n            Order Summary\n          </h2>\n          <hr />\n          <p>\n            <b>Products</b>\n          </p>\n          {cart.map((c, i) => (\n            <div key={i}>\n              <p>\n                {/* if product has offerPrice then  */}\n                {c.offerPrice ? (\n                  <span>\n                 \n                    <span className=\"text-success\">{c.title} x {c.count} = </span>\n                    <span className=\"text-danger\">\n                      <del>Rs {c.price * c.count}</del>\n                    </span>\n                    <span className=\"text-success\">    Rs. {c.offerPrice * c.count}</span>\n                  </span>\n                ) : (\n                  <span>\n                    <span className=\"text-success\">{c.title} x {c.count} = Rs. {c.price * c.count}</span>\n                  </span>\n                )}\n                \n              </p>\n            </div>\n          ))}\n          <hr />\n          <b>Total</b>: <b>Rs. {getTotal()}</b>\n          <hr />\n          {user ? (\n            <>\n              <button\n                onClick={saveOrderToDb}\n                className=\"btn btn-raised mt-2 grad-button text-dark\"\n                disabled={!cart.length}\n              >\n                Proceed to Checkout\n              </button>\n              <br />\n\n              <button\n                onClick={saveCashOrderToDb}\n                className=\"btn  btn-raised mt-2 grad-button text-dark\"\n                disabled={!cart.length}\n              >\n                Pay Cash On Delivery\n              </button>\n            </>\n          ) : (\n            <button className=\"btn btn-sm btn-primary mt-2\">\n              <Link to={{ pathname: \"Login\", state: { from: \"cart\" } }}>\n                Login to Checkout\n              </Link>\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","export default __webpack_public_path__ + \"static/media/laptop.db0a6ff4.png\";","import axios from \"axios\";\n\nexport const userCart = async (cart, authtoken) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/cart`,\n    { cart },\n    { headers: { authtoken } }\n  );\n\nexport const getUserCart = async (authtoken) =>\n  await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\n    headers: { authtoken },\n  });\n\nexport const emptyUserCart = async (authtoken) =>\n  await axios.put(\n    `${process.env.REACT_APP_API}/user/cart`,\n    {},\n    {\n      headers: { authtoken },\n    }\n  );\n\nexport const saveUserAddress = async (authtoken, address) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/address`,\n    { address },\n    { headers: { authtoken } }\n  );\n\nexport const applyCoupon = async (authtoken, coupon) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/cart/coupon`,\n    { coupon },\n    { headers: { authtoken } }\n  );\n\nexport const createOrder = async (stripeResponse, authtoken, deliverAddress) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/order`,\n    { stripeResponse, deliverAddress },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const getUserOrders = async (authtoken) =>\n  await axios.get(`${process.env.REACT_APP_API}/user/orders `, {\n    headers: { authtoken },\n  });\n\nexport const getWishlist = async (authtoken) =>\n  await axios.get(`${process.env.REACT_APP_API}/user/wishlist `, {\n    headers: { authtoken },\n  });\n\nexport const removeWishlist = async (productId, authtoken) =>\n  await axios.put(\n    `${process.env.REACT_APP_API}/user/wishlist/${productId} `,\n    {},\n    {\n      headers: { authtoken },\n    }\n  );\n\nexport const addToWishlist = async (productId, authtoken) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/wishlist `,\n    { productId },\n    {\n      headers: { authtoken },\n    }\n  );\n\nexport const createCashOrderForUser = async (\n  authtoken,\n  COD,\n  couponTrueOrFalse,\n  deliverAddress\n) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/cash-order`,\n    { couponApplied: couponTrueOrFalse, COD, deliverAddress },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\n  export const createPaypalOrderForUser = async (\n    authtoken,\n    paymentId,\n    couponTrueOrFalse,\n    deliverAddress\n  ) =>\n    await axios.post(\n      `${process.env.REACT_APP_API}/user/paypal-order`,\n      { couponApplied: couponTrueOrFalse, paymentId, deliverAddress},\n      {\n        headers: {\n          authtoken,\n        },\n      }\n    );\n  \n\nexport const addUserImage = async (authtoken, image) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/imageupload`,\n    { image },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const deleteUserImage = async (authtoken, image) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/imageupload`,\n    { image },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  )\n\n\nexport const getUserDetails = async (authtoken) =>\n  await axios.get(\n    `${process.env.REACT_APP_API}/user/details`,\n    {\n      headers: {\n        authtoken,\n      }\n    }\n  )\n\nexport const editUserDetails = async (authtoken, name, mobile, address) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/details`,\n    { name, mobile, address },\n    {\n      headers: {\n        authtoken,\n      }\n    }\n  )\n\nexport const deleteUserAddress = async (authtoken, id) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/delete-address`,\n    { id },\n    {\n      headers: {\n        authtoken,\n      }\n    }\n\n  )\n\n  export const changeStatus = async (orderId, orderStatus, authtoken) =>\n  await axios.put(\n    `${process.env.REACT_APP_API}/user/order-status`,\n    { orderId, orderStatus },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n"],"sourceRoot":""}
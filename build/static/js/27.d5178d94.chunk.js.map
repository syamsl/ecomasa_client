{"version":3,"sources":["components/order/SalesReportPdf.js","pages/admin/Sales.js","../node_modules/classnames/index.js","components/nav/AdminNav.js","functions/dashboard.js"],"names":["styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","text","id","image","marginVertical","marginHorizontal","header","color","footer","pageNumber","position","bottom","left","right","SalesReportPdf","salesReport","style","fixed","Date","toLocaleString","data","getContent","x","_id","user","email","createdAt","toISOString","split","paymentIntent","amount","payment_method_types","Sales","useState","report","setReport","week","month","year","custom","setSalesReport","startDate","setStartDate","endDate","setEndDate","optionData","setOptionData","useSelector","state","useEffect","loadSales","getWeekSales","token","then","res","getMonthSales","getYearSales","getCustomSales","className","AdminNav","borderRadius","onChange","e","target","value","selected","date","maxDate","now","minDate","length","document","fileName","showDownloadLink","map","order","i","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","to","getUserCount","authtoken","a","axios","get","process","headers","getProductSold","getOrderCount","getTotalRevenue","weekOrders","paymentMethods"],"mappings":"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","file":"static/js/27.d5178d94.chunk.js","sourcesContent":["import React,{useEffect} from \"react\";\nimport { Document, Page, Text, StyleSheet } from \"@react-pdf/renderer\";\nimport {\n    Table,\n    TableHeader,\n    TableCell,\n    TableBody,\n    DataTableCell,\n} from \"@david.kucsai/react-pdf-table\";\n\n\nconst SalesReportPdf = ({ salesReport }) => {\n\n// console.log(\"Sales Report--->\",salesReport);\n\n    return (\n        <Document>\n            <Page style={styles.body}>\n                <Text style={styles.header} fixed>\n                    ~ {new Date().toLocaleString()} ~\n                </Text>\n                <Text style={styles.title}>Sales Report</Text>\n                <Text style={styles.author}>EcoMaSa</Text>\n\n                <Table>\n                    <TableHeader>\n                        <TableCell  style={styles.id}>OrderId</TableCell>\n                        <TableCell  style={styles.id}>User</TableCell>\n                        <TableCell  style={styles.id}>Date</TableCell>\n                        <TableCell  style={styles.id}>Price</TableCell>\n                        <TableCell  style={styles.id}>Payment Method</TableCell>\n                    </TableHeader>\n                </Table>\n\n                <Table data={salesReport}>\n                    <TableBody>\n                        <DataTableCell getContent={(x) => x._id}   style={styles.id}/>\n                        <DataTableCell getContent={(x) => x.user[0].email}  style={styles.id} />\n                        <DataTableCell getContent={(x) => new Date(x.createdAt).toISOString().split('T')[0]}  style={styles.id}/>\n                        <DataTableCell getContent={(x) => `Rs. ${x.paymentIntent.amount}`}  style={styles.id}/>\n                        <DataTableCell getContent={(x) => x.paymentIntent.payment_method_types[0]}  style={styles.id} />\n                    </TableBody>\n                </Table>\n                <Text style={styles.text}></Text>\n            </Page>\n        </Document>\n    )\n}\n\nconst styles = StyleSheet.create({\n    page: {\n        flexDirection: 'row',\n        backgroundColor: '#E4E4E4',\n      },\n      section: {\n        margin: 5,\n        padding: 5,\n        flexGrow: 1,\n      },\n      body: {\n        paddingTop: 35,\n        paddingBottom: 65,\n        paddingHorizontal: 35,\n      },\n      title: {\n        fontSize: 24,\n        textAlign: 'center',\n      },\n      author: {\n        fontSize: 12,\n        textAlign: 'center',\n        marginBottom: 40,\n      },\n      subtitle: {\n        fontSize: 18,\n        margin: 12,\n      },\n      text: {\n        margin: 12,\n        fontSize: 14,\n        textAlign: 'justify',\n      },\n      id: {\n        padding: 0,\n        fontSize: 9,\n        textAlign: 'center',\n      },\n      image: {\n        marginVertical: 15,\n        marginHorizontal: 100,\n      },\n      header: {\n        fontSize: 12,\n        marginBottom: 20,\n        textAlign: 'center',\n        color: 'grey',\n      },\n      footer: {\n        padding: '100px',\n        fontSize: 12,\n        marginBottom: 20,\n        textAlign: 'center',\n        color: 'grey',\n      },\n      pageNumber: {\n        position: 'absolute',\n        fontSize: 12,\n        bottom: 30,\n        left: 0,\n        right: 0,\n        textAlign: 'center',\n        color: 'grey',\n      },\n});\n\nexport default SalesReportPdf;\n","import React, { useEffect, useState } from \"react\";\nimport AdminNav from \"../../components/nav/AdminNav\";\nimport {  getWeekSales, getMonthSales, getYearSales, getCustomSales } from \"../../functions/dashboard\"\nimport { useSelector } from 'react-redux'\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport SalesReportPdf from \"../../components/order/SalesReportPdf\";\nimport DatePicker from \"react-datepicker\";\n\n\n\n\nconst Sales = () => {\n    const [report, setReport] = useState(\"\")\n    const [loading, setLoading] = useState(true)\n    const [salesReport, setSalesReport] = useState(\n        { week: [], month: [], year: [], custom: [] }\n    )\n    const [startDate, setStartDate] = useState(\"\")\n    const [endDate, setEndDate] = useState(\"\")\n    const [optionData, setOptionData] = useState([])\n\n\n    const { user } = useSelector((state) => ({ ...state }))\n\n    useEffect(() => {\n        loadSales();\n    }, [report, startDate, endDate])\n\n\n    const optionHandler = (e) => {\n        setReport(e.target.value)\n    }\n\n    const loadSales = () => {\n        if (report === \"week\") {\n\n            // console.log(\"This is Week\")\n\n            getWeekSales(user.token)\n                .then(res => {\n                    // console.log(res)\n                    setSalesReport({ ...salesReport, week: res.data })\n                    // console.log(salesReport)\n                    setOptionData(res.data)\n                })\n        }\n\n        if (report === \"month\") {\n            //  console.log(\"This is Month\")\n            getMonthSales(user.token)\n                .then(res => {\n                    // console.log(res)\n                    setSalesReport({ ...salesReport, month: res.data })\n                    setOptionData(res.data)\n                })\n        }\n\n        if (report === \"year\") {\n            // console.log(\"This is Year\")\n            getYearSales(user.token)\n                .then(res => {\n                    // console.log(res)\n                    setSalesReport({ ...salesReport, year: res.data })\n                    setOptionData(res.data)\n                })\n        }\n\n        if (startDate !== \"\" && endDate !== \"\") {\n            // console.log(\"This is custom\")\n            getCustomSales(user.token, startDate, endDate)\n                .then(res => {\n                    // console.log(res)\n                    setSalesReport({ ...salesReport, custom: res.data })\n                    setOptionData(res.data)\n                })\n        }\n    }\n\n    const showDownloadLink = (salesReport) => {\n\n        if (report == \"week\") {\n            // console.log(salesReport.week)\n            if (salesReport.week.length > 0) {\n                return (\n                    <PDFDownloadLink\n                        document={<SalesReportPdf salesReport={salesReport.week} />}\n                        fileName=\"sales_report.pdf\"\n                        className=\"btn btn-outline-info\"\n                    >\n                        Download Report\n                    </PDFDownloadLink>)\n            }\n        }\n\n        if (report == \"month\") {\n            if (salesReport.month.length > 0) {\n                return (\n                    <PDFDownloadLink\n                        document={<SalesReportPdf salesReport={salesReport.month} />}\n                        fileName=\"sales_report.pdf\"\n                        className=\"btn btn-outline-info\"\n                    >\n                        Download Report\n                    </PDFDownloadLink>)\n            }\n        }\n\n        if (report == \"year\") {\n            if (salesReport.year.length > 0) {\n                return (\n                    <PDFDownloadLink\n                        document={<SalesReportPdf salesReport={salesReport.year} />}\n                        fileName=\"sales_report.pdf\"\n                        className=\"btn btn-outline-info\"\n                    >\n                        Download Report\n                    </PDFDownloadLink>)\n            }\n        }\n\n        if (report == \"custom\") {\n            if (salesReport.custom.length > 0) {\n                return (\n                    <PDFDownloadLink\n                        document={<SalesReportPdf salesReport={salesReport.custom} />}\n                        fileName=\"sales_report.pdf\"\n                        className=\"btn btn-outline-info\"\n                    >\n                        Download Report\n                    </PDFDownloadLink>)\n            }\n        }\n    }\n\n    return (\n        <div className=\"container-fluid mt-5\">\n            <div className=\"row\" >\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\" col-md-10 text-center\">\n                    <h2 className=\"shaw text-secondary mt-3\">Sales</h2>\n                    <div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\" col-md-2  m-2  p-4\" style={{ borderRadius: \"10px\" }}>\n                                    <span className=\"textlg text-secondary\"><b>Sales Report</b></span>\n                                    <br />\n                                    <span>\n                                        <select className=\"text-dark grad-input\" onChange={optionHandler}>\n                                            <option >Select Report</option>\n                                            <option value=\"custom\">Custom</option>\n                                            <option value=\"week\">Weekly</option>\n                                            <option value=\"month\" >Monthly</option>\n                                            <option value=\"year\" >Yearly</option>\n                                        </select>\n                                        {report == \"custom\" ?\n                                            <>\n                                                <div>\n                                                    <label>From</label>\n                                                    <DatePicker\n                                                        selected={startDate}\n                                                        onChange={(date) => setStartDate(date)}\n                                                        className=\"text-dark grad-input\"\n                                                        maxDate={new Date(Date.now())}\n                                                    />\n                                                    <label>To</label>\n                                                    <DatePicker\n                                                        selected={endDate}\n                                                        onChange={(date) => setEndDate(date)}\n                                                        className=\"text-dark grad-input\"\n                                                        minDate={startDate}\n                                                        maxDate={new Date(Date.now())}\n                                                    />\n                                                </div>\n                                            </>\n                                            : null}\n                                    </span>\n                                </div>\n\n                                <div>\n                                    <h4 className=\"text-dark\">Sales</h4>\n\n                                    <div className=\"row d-flex justify-content-center\">\n                                        {showDownloadLink(salesReport)}\n                                    </div>\n                                    <div className=\"table-responsive-sm\">\n                                    <table className=\"table table-sm table-bordered table-hover\">\n                                        <thead className=\"thead-light\">\n                                            <tr>\n                                                <th>Order ID</th>\n                                                <th>User</th>\n                                                <th>Date</th>\n                                                <th>Price</th>\n                                                <th>Payment Method</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {optionData && optionData.map((order, i) => (\n                                                <tr key={i}>\n                                                    <td>{order._id}</td>\n                                                    <td>{order.user[0].email}</td>\n                                                    <td>{new Date(order.createdAt).toISOString().split('T')[0]}</td>\n                                                    <td>{order.paymentIntent.amount}</td>\n                                                    <td>{order.paymentIntent.payment_method_types[0]}</td>\n                                                </tr>\n                                            ))}\n                                        </tbody>\n                                    </table>\n                                    </div>\n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Sales;\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst AdminNav = () => (\n  <nav>\n    <ul className=\"nav flex-column\">\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/dashboard\" className=\"nav-link text-white shaw\">\n          Dashboard\n        </Link>\n      </li>\n\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/order-management\" className=\"nav-link text-white shaw\">\n          Order Management\n        </Link>\n      </li>\n\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/user-management\" className=\"nav-link text-white shaw\">\n          User Management\n        </Link>\n      </li>\n\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/products\" className=\"nav-link text-white shaw\">\n          Product Management\n        </Link>\n      </li>\n\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/category\" className=\"nav-link text-white shaw \">\n          Category Management\n        </Link>\n      </li>\n\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/offer-management\" className=\"nav-link text-white shaw\">\n          Offer Management\n        </Link>\n      </li>\n\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/sales\" className=\"nav-link text-white shaw\">\n          Sales\n        </Link>\n      </li>\n\n      <li className=\"nav-item btn btn-raised grad\">\n        <Link to=\"/admin/coupon\" className=\"nav-link text-white shaw\">\n          Coupon\n        </Link>\n      </li>\n\n    </ul>\n  </nav>\n);\n\nexport default AdminNav;\n","import axios from 'axios';\n\nexport const getUserCount = async (authtoken) =>\n    await axios.get(`${process.env.REACT_APP_API}/dashboard-users`, {\n        headers: {\n            authtoken,\n        }\n    });\n\nexport const getProductSold = async (authtoken) =>\n    await axios.get(`${process.env.REACT_APP_API}/dashboard-sold`, {\n        headers: {\n            authtoken,\n        }\n    });\n\nexport const getOrderCount = async (authtoken) =>\n    await axios.get(`${process.env.REACT_APP_API}/dashboard-orders`, {\n        headers: {\n            authtoken,\n        }\n    })\n\nexport const getTotalRevenue = async (authtoken) =>\n    await axios.get(`${process.env.REACT_APP_API}/dashboard-revenue`, {\n        headers: {\n            authtoken,\n        }\n    })\n\nexport const weekOrders = async (authtoken) =>\n    await axios.get(`${process.env.REACT_APP_API}/dashboard-weekorders`, {\n        headers: {\n            authtoken,\n        }\n    })\n\nexport const paymentMethods = async (authtoken) =>\n    await axios.get(`${process.env.REACT_APP_API}/dashboard-payment`, {\n        headers: {\n            authtoken,\n        }\n    })\n\n\nexport const getWeekSales = async (authtoken) =>\n    await axios.get(\n        `${process.env.REACT_APP_API}/admin/weekly-report`,\n        {\n            headers: {\n                authtoken,\n            },\n        }\n    )\n\nexport const getMonthSales = async (authtoken) =>\n    await axios.get(\n        `${process.env.REACT_APP_API}/admin/monthly-report`,\n        {\n            headers: {\n                authtoken,\n            },\n        }\n    )\n\nexport const getYearSales = async (authtoken) =>\n    await axios.get(\n        `${process.env.REACT_APP_API}/admin/yearly-report`,\n        {\n            headers: {\n                authtoken,\n            },\n        }\n    )\n\nexport const getCustomSales = async (authtoken,startDate,endDate) =>\n    await axios.get(\n        `${process.env.REACT_APP_API}/admin/custom-report/${startDate}/${endDate}`,\n        {\n            headers: {\n                authtoken,\n            },\n        }\n    )\n"],"sourceRoot":""}